{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACE;AAY9C,IAAa,0BAA0B,GAAvC;CAA0C;AAA7B,0BAA0B;IAVtC,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,qEAAa,EAAC;aAClC,CAAC;SACF;QACD,OAAO,EAAE;YACR,6DAAY;SACZ;KACD,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;ACdvC,o8DAAo8D,qBAAqB,wBAAwB,oRAAoR,oDAAoD,IAAI,gBAAgB,yaAAya,wDAAwD,IAAI,gBAAgB,yPAAyP,mEAAmE,IAAI,gBAAgB,yjBAAyjB,4EAA4E,IAAI,gBAAgB,00NAA00N,+BAA+B,UAAU,yCAAyC,cAAc,QAAQ,SAAS,SAAS,cAAc,iFAAiF,IAAI,gBAAgB,UAAU,QAAQ,gBAAgB,yCAAyC,cAAc,QAAQ,OAAO,SAAS,cAAc,qFAAqF,IAAI,gBAAgB,UAAU,QAAQ,gBAAgB,yCAAyC,cAAc,QAAQ,QAAQ,SAAS,cAAc,2GAA2G,IAAI,gBAAgB,UAAU,QAAQ,gBAAgB,yCAAyC,cAAc,QAAQ,SAAS,SAAS,cAAc,2FAA2F,IAAI,gBAAgB,UAAU,QAAQ,gBAAgB,yCAAyC,cAAc,QAAQ,aAAa,SAAS,cAAc,2GAA2G,IAAI,gBAAgB,UAAU,QAAQ,gBAAgB,yCAAyC,cAAc,QAAQ,iBAAiB,SAAS,cAAc,qFAAqF,IAAI,gBAAgB,UAAU,QAAQ,MAAM,QAAQ,uHAAuH,qBAAqB,qBAAqB,qBAAqB,qBAAqB,qBAAqB,yBAAyB,cAAc,mE;;;;;;;;;;;;;;;;;;;;;;;ACA3yY;AACE;AACC;AACA;AAC4B;AACxB;AACF;AACQ;AAexD,IAAa,mBAAmB,GAAhC;CAAmC;AAAtB,mBAAmB;IAb/B,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY;YACN,2DAAW;YACjB,iGAA0B;YACpB,gEAAe;YACf,8DAAa;YACb,sEAAqB;SAC3B;QACD,YAAY,EAAE;YACb,qEAAa;SACb;KACD,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;ACtBQ;AAWxC,IAAa,aAAa,GAA1B;CAaA;AAba,aAAa;IATzB,gEAAS,CAAC;QACP,wGAAmC;QACnC,MAAM,EAAE,CAAC;;;;;KAKR,CAAC;KACL,CAAC;GACW,aAAa,CAa1B;AAb0B","file":"inputmaskdemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {InputMaskDemo} from './inputmaskdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: InputMaskDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class InputMaskDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">InputMask</span>\\n        <span>InputMask component is used to enter input in a certain format such as numeric, date, currency, email and phone.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>Basic</span>\\n            <p-inputMask mask=\\\"99-999999\\\" [(ngModel)]=\\\"val1\\\" placeholder=\\\"99-999999\\\"></p-inputMask>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>SSN</span>\\n            <p-inputMask mask=\\\"999-99-9999\\\" [(ngModel)]=\\\"val2\\\" placeholder=\\\"999-99-9999\\\"></p-inputMask>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>Date</span>\\n            <p-inputMask mask=\\\"99/99/9999\\\" [(ngModel)]=\\\"val3\\\" placeholder=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\"></p-inputMask>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>Phone</span>\\n            <p-inputMask mask=\\\"(999) 999-9999\\\" [(ngModel)]=\\\"val4\\\" placeholder=\\\"(999) 999-9999\\\"></p-inputMask>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>Phone Ext</span>\\n            <p-inputMask mask=\\\"(999) 999-9999? x99999\\\" [(ngModel)]=\\\"val5\\\" placeholder=\\\"(999) 999-9999? x99999\\\"></p-inputMask>\\n        </div>\\n        \\n        <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\n            <span>Serial Number</span>\\n            <p-inputMask mask=\\\"a*-999-a999\\\" [(ngModel)]=\\\"val6\\\" placeholder=\\\"a*-999-a999\\\"></p-inputMask>\\n        </div>\\n    </div>\\n    \\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;InputMaskModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Component is defined using p-inputMask element with a mask and two-way value binding is enabled with standard ngModel directive.</p>   \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputMask [(ngModel)]=\\\"val\\\" mask=\\\"99-9999\\\"&gt;&lt;/p-inputMask&gt;\\n</code>\\n</pre>\\n\\n            <h3>Mask</h3>\\n            <p>Mask format can be a combination of the the following built-in definitions.</p>\\n            <ul>\\n                <li>a - Alpha character (A-Z,a-z)</li>\\n                <li>9 - Numeric character (0-9)</li>\\n                <li>* - Alpha numberic character (A-Z,a-z,0-9)</li>\\n            </ul>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputMask [(ngModel)]=\\\"val\\\" mask=\\\"a*-999-a999\\\"&gt;&lt;/p-inputMask&gt;\\n</code>\\n</pre>\\n            \\n            <h3>SlotChar</h3>\\n            <p>Underscore is the default placeholder for a mask and this can be customized using slotChart option.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputMask [(ngModel)]=\\\"val\\\" mask=\\\"99-9999\\\" slotChar=\\\" \\\"&gt;&lt;/p-inputMask&gt;\\n</code>\\n</pre>\\n            \\n            <h3>Optional Values</h3>\\n            <p>If the input does not complete the mask definition, it is cleared by default. Use autoClear property to control this behavior. In addition,\\n            certain part of a mask can be made optional by using ? symbol where anything after the question mark becomes optional.</p>\\n                        \\n            <h3>Model Driven Forms</h3>\\n            <p>InputMask can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-inputMask formControlName=\\\"username\\\" mask=\\\"(999) 999-9999? x99999\\\"&gt;&lt;/p-inputMask&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>type</td>\\n                            <td>string</td>\\n                            <td>text</td>\\n                            <td>HTML5 input type</td>\\n                        </tr>\\n                        <tr>\\n                            <td>mask</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Mask pattern.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>slotChar</td>\\n                            <td>string</td>\\n                            <td>_</td>\\n                            <td>Placeholder character in mask, default is underscore.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>autoClear</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Clears the incomplete value on blur.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>unmask</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Defines if ngModel sets the raw unmasked value to bound value or the formatted mask value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>placeholder</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Advisory information to display on input.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>size</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Size of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maxlength</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum number of character allows in the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Specifies tab order of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element value cannot be altered.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>readonly</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that an input field is read-only.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>name</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputId</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>required</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onFocus</td>\\n                            <td>event: Browser event</td>\\n                            <td>Callback to invoke when input receives focus.</td>\\n                        </tr> \\n                        <tr>\\n                            <td>onBlur</td>\\n                            <td>event: Browser event</td>\\n                            <td>Callback to invoke when input loses focus.</td>\\n                        </tr>   \\n                        <tr>\\n                            <td>onComplete</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke on when user completes the mask pattern.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Styling is same as <a href=\\\"#\\\" [routerLink]=\\\"['/inputtext']\\\">inputtext component</a>, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inputmask\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;div class=\\\"ui-g ui-fluid\\\"&gt;\\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;Basic&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"99-999999\\\" [(ngModel)]=\\\"val1\\\" placeholder=\\\"99-999999\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n    \\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;SSN&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"999-99-9999\\\" [(ngModel)]=\\\"val2\\\" placeholder=\\\"999-99-9999\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n    \\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;Date&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"99/99/9999\\\" [(ngModel)]=\\\"val3\\\" placeholder=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n    \\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;Phone&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"(999) 999-9999\\\" [(ngModel)]=\\\"val4\\\" placeholder=\\\"(999) 999-9999\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n    \\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;Phone Ext&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"(999) 999-9999? x99999\\\" [(ngModel)]=\\\"val5\\\" placeholder=\\\"(999) 999-9999? x99999\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n    \\n    &lt;div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\"&gt;\\n        &lt;span&gt;Serial Number&lt;/span&gt;\\n        &lt;p-inputMask mask=\\\"a*-999-a999\\\" [(ngModel)]=\\\"val6\\\" placeholder=\\\"a*-999-a999\\\"&gt;&lt;/p-inputMask&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class InputMaskDemo &#123;\\n\\n    val1: string;\\n\\n    val2: string;\\n\\n    val3: string;\\n\\n    val4: string;\\n\\n    val5: string;\\n    \\n    val6: string;\\n    \\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.html\n// module id = ../../../../../src/app/showcase/components/inputmask/inputmaskdemo.html\n// module chunks = inputmaskdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {InputMaskDemo} from './inputmaskdemo';\nimport {InputMaskDemoRoutingModule} from './inputmaskdemo-routing.module';\nimport { InputMaskModule } from 'primeng/primeng';\nimport { TabViewModule } from 'primeng/primeng';\nimport { CodeHighlighterModule } from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tInputMaskDemoRoutingModule,\n        InputMaskModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tInputMaskDemo\n\t]\n})\nexport class InputMaskDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './inputmaskdemo.html',\n    styles: [`\n        .ui-g-12 > span {\n            display: block;\n            margin-bottom: 4px;\n        }\n    `]\n})\nexport class InputMaskDemo {\n\n    val1: string;\n\n    val2: string;\n\n    val3: string;\n\n    val4: string;\n\n    val5: string;\n    \n    val6: string;\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/inputmask/inputmaskdemo.ts"],"sourceRoot":"webpack:///"}