{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACF;AAY1C,IAAa,wBAAwB,GAArC;CAAwC;AAA3B,wBAAwB;IAVpC,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,iEAAW,EAAC;aAChC,CAAC;SACF;QACD,OAAO,EAAE;YACR,6DAAY;SACZ;KACD,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;ACdrC,i7BAAi7B,mBAAmB,wBAAwB,wNAAwN,6CAA6C,IAAI,cAAc,uMAAuM,qCAAqC,IAAI,cAAc,8LAA8L,uEAAuE,IAAI,cAAc,yMAAyM,6DAA6D,IAAI,cAAc,g3OAAg3O,sBAAsB,SAAS,OAAO,MAAM,8CAA8C,IAAI,cAAc,QAAQ,MAAM,WAAW,OAAO,MAAM,wEAAwE,IAAI,cAAc,QAAQ,MAAM,QAAQ,OAAO,MAAM,8DAA8D,IAAI,cAAc,QAAQ,MAAM,YAAY,OAAO,MAAM,kEAAkE,IAAI,cAAc,qHAAqH,qBAAqB,qBAAqB,qBAAqB,2BAA2B,cAAc,mE;;;;;;;;;;;;;;;;;;;;;;;ACA5hU;AACC;AACA;AAAA,CAAC;AACH;AAC8B;AACc;AAetF,IAAa,iBAAiB,GAA9B;CAAiC;AAApB,iBAAiB;IAb7B,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY;YACN,2DAAW;YACjB,6FAAwB;YAClB,8DAAa;YACb,8DAAa;YACb,sEAAqB;SAC3B;QACD,YAAY,EAAE;YACb,iEAAW;SACX;KACD,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;ACpBU;AAKxC,IAAa,WAAW,GAAxB;IAHA;QAWI,SAAI,GAAW,GAAG,CAAC;IACvB;CAAA;AATa,WAAW;IAHvB,gEAAS,CAAC;QACP,oGAAiC;KACpC,CAAC;GACW,WAAW,CASxB;AATwB","file":"spinnerdemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SpinnerDemo} from './spinnerdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SpinnerDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SpinnerDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Spinner</span>\\n        <span>Spinner is an input component to provide a numerical input.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val1\\\"></p-spinner>\\n\\n    <h3>Min/Max</h3>\\n    <p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val2\\\" [min]=\\\"0\\\" [max]=\\\"100\\\"></p-spinner>\\n\\n    <h3>Step</h3>\\n    <p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val3\\\" [step]=\\\"0.25\\\"></p-spinner>\\n    \\n    <h3>Disabled</h3>\\n    <p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val4\\\" [disabled]=\\\"true\\\"></p-spinner>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SpinnerModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Two-way value binding is defined using standard ngModel directive.</p>     \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val\\\"&gt;&lt;/p-spinner&gt;\\n</code>\\n</pre>\\n\\n            <h3>Model Driven Forms</h3>\\n            <p>Spinner can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-spinner formControlName=\\\"age\\\"&gt;&lt;/p-spinner&gt;\\n</code>\\n</pre>\\n\\n            <h3>Min-Max</h3>\\n            <p>Boundaries are specified with min and max attributes.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val\\\" [min]=\\\"0\\\" [max]=\\\"100\\\"&gt;&lt;/p-spinner&gt;\\n</code>\\n</pre>\\n\\n            <h3>Step</h3>\\n            <p>Step factor is 1 by default and can be customized with step option.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val\\\" [step]=\\\"0.25\\\"&gt;&lt;/p-spinner&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>step</td>\\n                            <td>number</td>\\n                            <td>1</td>\\n                            <td>Step factor to increment/decrement the value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>min</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Mininum boundary value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>max</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum boundary value.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>placeholder</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Hint text for the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>readonly</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be read-only.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maxlength</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum number of character allows in the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>size</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Size of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>decimalSeparator</td>\\n                            <td>string</td>\\n                            <td>.</td>\\n                            <td>Separator character for decimals.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>thousandSeparator</td>\\n                            <td>string</td>\\n                            <td>,</td>\\n                            <td>Separator character for thousands.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>formatInput</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>When present, formats the user input.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputId</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>type</td>\\n                            <td>string</td>\\n                            <td>text</td>\\n                            <td>Type of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>required</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onBlur</td>\\n                            <td>event: Blur event</td>\\n                            <td>Callback to invoke when input loses focus.</td>\\n                        </tr>       \\n                        <tr>\\n                            <td>onFocus</td>\\n                            <td>event: Browser event</td>\\n                            <td>Callback to invoke when input gets focus.</td>\\n                        </tr>                 \\n                        <tr>\\n                            <td>onChange</td>\\n                            <td>event: Change event</td>\\n                            <td>Callback to invoke on value change.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-spinner</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-spinner-up</td>\\n                            <td>Up element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-spinner-down</td>\\n                            <td>Down button</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/spinner\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val1\\\"&gt;&lt;/p-spinner&gt;\\n\\n&lt;h3&gt;Min/Max&lt;/h3&gt;\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val2\\\" [min]=\\\"0\\\" [max]=\\\"100\\\"&gt;&lt;/p-spinner&gt;\\n\\n&lt;h3&gt;Step&lt;/h3&gt;\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val3\\\" [step]=\\\"0.25\\\"&gt;&lt;/p-spinner&gt;\\n\\n&lt;h3&gt;Disabled&lt;/h3&gt;\\n&lt;p-spinner size=\\\"30\\\" [(ngModel)]=\\\"val4\\\" [disabled]=\\\"true\\\"&gt;&lt;/p-spinner&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SpinnerDemo &#123;\\n\\n    val1: number;\\n\\n    val2: number;\\n\\n    val3: number;\\n\\n    val4: number = 100;\\n    \\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.html\n// module id = ../../../../../src/app/showcase/components/spinner/spinnerdemo.html\n// module chunks = spinnerdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common'\nimport {FormsModule}  from '@angular/forms';;\nimport {SpinnerDemo} from './spinnerdemo';\nimport { SpinnerDemoRoutingModule } from './spinnerdemo-routing.module';\nimport { SpinnerModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tSpinnerDemoRoutingModule,\n        SpinnerModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSpinnerDemo\n\t]\n})\nexport class SpinnerDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './spinnerdemo.html'\n})\nexport class SpinnerDemo {\n\n    val1: number;\n\n    val2: number;\n\n    val3: number;\n\n    val4: number = 100;\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/spinner/spinnerdemo.ts"],"sourceRoot":"webpack:///"}