{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACN;AAYtC,IAAa,sBAAsB,GAAnC;CAAsC;AAAzB,sBAAsB;IAVlC,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,6DAAS,EAAC;aAC9B,CAAC;SACF;QACD,OAAO,EAAE;YACR,6DAAY;SACZ;KACD,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;ACdnC,8eAA8e,MAAM,iWAAiW,iBAAiB,wBAAwB,sLAAsL,kCAAkC,IAAI,YAAY,iHAAiH,yBAAyB,UAAU,mMAAmM,sCAAsC,IAAI,YAAY,oPAAoP,kCAAkC,UAAU,2CAA2C,gBAAgB,MAAM,UAAU,MAAM,gBAAgB,0BAA0B,IAAI,MAAM,UAAU,gBAAgB,MAAM,YAAY,6xNAA6xN,sBAAsB,SAAS,OAAO,MAAM,oCAAoC,IAAI,YAAY,QAAQ,MAAM,eAAe,OAAO,MAAM,mCAAmC,UAAU,2CAA2C,gBAAgB,MAAM,UAAU,MAAM,gBAAgB,qDAAqD,IAAI,MAAM,UAAU,gBAAgB,MAAM,YAAY,mHAAmH,0BAA0B,8BAA8B,QAAQ,mE;;;;;;;;;;;;;;;;;;;;;;;ACA5uS;AACE;AACC;AACR;AAC4B;AACtB;AACC;AACC;AACQ;AAgBtD,IAAa,eAAe,GAA5B;CAA+B;AAAlB,eAAe;IAd3B,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY;YACN,2DAAW;YACjB,yFAAsB;YAChB,4DAAW;YACX,6DAAY;YACZ,8DAAa;YACb,sEAAqB;SAC3B;QACD,YAAY,EAAE;YACb,6DAAS;SACT;KACD,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;ACxBY;AAKxC,IAAa,SAAS,GAAtB;CAKA;AALa,SAAS;IAHrB,gEAAS,CAAC;QACP,gGAA+B;KAClC,CAAC;GACW,SAAS,CAKtB;AALsB","file":"chipsdemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ChipsDemo} from './chipsdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ChipsDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ChipsDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Chips</span>\\n        <span>Chips is used to enter multiple values on an inputfield.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-chips [(ngModel)]=\\\"values1\\\"></p-chips>\\n    \\n    <h3>Template</h3>\\n    <p-chips [(ngModel)]=\\\"values2\\\">\\n        <ng-template let-item pTemplate=\\\"item\\\">\\n            {{item}} - (active) <i class=\\\"fa fa-user\\\" style=\\\"margin-right:2em\\\"></i>\\n        </ng-template>\\n    </p-chips>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ChipsModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Chips requires an array as its model.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chips [(ngModel)]=\\\"values\\\"&gt;&lt;/p-chips&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    values: string[];\\n\\n&#125;\\n</code>\\n</pre>\\n            <h3>Model Driven Forms</h3>\\n            <p>Chips can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chips formControlName=\\\"cities\\\"&gt;&lt;/p-chips&gt;\\n</code>\\n</pre>\\n\\n            <h3>Custom Content</h3>\\n            <p>A chip is customized using a ng-template element where the value is passed as the implicit variable.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-chips [(ngModel)]=\\\"values\\\"&gt;\\n    &lt;ng-template let-item pTemplate=\\\"item\\\"&gt;\\n        &#123;&#123;item&#125;&#125; - (active) &lt;i class=\\\"fa fa-user\\\"&gt;&lt;/i&gt;\\n    &lt;/ng-template&gt;\\n&lt;/p-chips&gt;\\n</code>\\n</pre>\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>field</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the property to display on a chip.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>max</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum number of entries allowed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>placeholder</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Advisory information to display on input.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputId</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>allowDuplicate</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Whether to allow duplicate values or not.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputStyle</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the input field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>addOnTab</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Whether to add an item on tab key press.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Parameters</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onAdd</td>\\n                            <td>originalEvent: Browser event <br >\\n                                value: Added item value\\n                            </td>\\n                            <td>Callback to invoke when a value is added.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onRemove</td>\\n                            <td>originalEvent: Browser event <br >\\n                                value: Added item value\\n                            </td>\\n                            <td>Callback to invoke when a value is removed.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-chips</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-chips-token</td>\\n                            <td>Chip element container.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-chips-token-icon</td>\\n                            <td>Icon of a chip.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-chips-token-label</td>\\n                            <td>Label of a chip.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-chips-input-token</td>\\n                            <td>Container of input element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chips\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-chips [(ngModel)]=\\\"values1\\\" &gt;&lt;/p-chips&gt;\\n\\n&lt;h3&gt;ng-template&lt;/h3&gt;\\n&lt;p-chips [(ngModel)]=\\\"values2\\\"&gt;\\n    &lt;ng-template let-item pTemplate=\\\"item\\\"&gt;\\n        &#123;&#123;item&#125;&#125; - (active) &lt;i class=\\\"fa fa-user\\\" style=\\\"margin-right:2em\\\"&gt;&lt;/i&gt;\\n    &lt;/ng-template&gt;\\n&lt;/p-chips&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ChipsDemo &#123;\\n\\n    values1: string[];\\n    \\n    values2: string[];\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.html\n// module id = ../../../../../src/app/showcase/components/chips/chipsdemo.html\n// module chunks = chipsdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {ChipsDemo} from './chipsdemo';\nimport {ChipsDemoRoutingModule} from './chipsdemo-routing.module';\nimport {ChipsModule} from 'primeng/primeng';\nimport {ButtonModule} from 'primeng/primeng';\nimport {TabViewModule} from 'primeng/primeng';\nimport {CodeHighlighterModule} from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tChipsDemoRoutingModule,\n        ChipsModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tChipsDemo\n\t]\n})\nexport class ChipsDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './chipsdemo.html'\n})\nexport class ChipsDemo {\n\n    values1: string[];\n    \n    values2: string[];\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/chips/chipsdemo.ts"],"sourceRoot":"webpack:///"}