{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.ts"],"names":[],"mappings":"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","file":"gmapdemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {GMapDemo} from './gmapdemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: GMapDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class GMapDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">GMap</span>\\n        <span>GMap component provides integration with Google Maps API. This sample demontrates\\n        various uses cases like binding, overlays and events. Click the map to add a new item.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\n    \\n    <p-gmap #gmap [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" \\n       (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\" (onOverlayDragEnd)=\\\"handleDragEnd($event)\\\"></p-gmap>\\n    <button type=\\\"button\\\" pButton label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"clear()\\\" style=\\\"margin-top:10px\\\"></button>\\n    <button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"fa-search-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\" style=\\\"margin-top:10px\\\"></button>\\n    <button type=\\\"button\\\" pButton label=\\\"Zoom Out\\\" icon=\\\"fa-search-minus\\\" (click)=\\\"zoomOut(gmap.getMap())\\\" style=\\\"margin-top:10px\\\"></button>\\n\\n    <p-dialog showEffect=\\\"fade\\\" [(visible)]=\\\"dialogVisible\\\" header=\\\"New Location\\\" [width]=\\\"300\\\">\\n        <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedPosition\\\">\\n            <div class=\\\"ui-g-2\\\"><label for=\\\"title\\\">Label</label></div>\\n            <div class=\\\"ui-g-10\\\"><input type=\\\"text\\\" pInputText id=\\\"title\\\" [(ngModel)]=\\\"markerTitle\\\"></div>\\n            \\n            <div class=\\\"ui-g-2\\\"><label for=\\\"lat\\\">Lat</label></div>\\n            <div class=\\\"ui-g-10\\\"><input id=\\\"lat\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lat()\\\"></div>\\n            \\n            <div class=\\\"ui-g-2\\\"><label for=\\\"lng\\\">Lng</label></div>\\n            <div class=\\\"ui-g-10\\\"><input id=\\\"lng\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lng()\\\"></div>\\n            \\n            <div class=\\\"ui-g-2\\\"><label for=\\\"drg\\\">Drag</label></div>\\n            <div class=\\\"ui-g-10\\\"><p-checkbox [(ngModel)]=\\\"draggable\\\" binary=\\\"true\\\" [style]=\\\"{'margin-top':'.25em'}\\\"></p-checkbox></div>\\n        </div>\\n        <p-footer>\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"Add Marker\\\" icon=\\\"fa-plus\\\" (click)=\\\"addMarker()\\\"></button>\\n            </div>\\n        </p-footer>\\n    </p-dialog>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;GMapModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>A map is initialized with options and dimensions. Refer to the google maps api for the list of available options.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" &gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Overlays</h3>\\n            <p>GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware\\n            of one-way binding so whenever the array changes, gmap updates itself.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" &gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n        \\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n            new google.maps.Polygon(&#123;paths: [\\n                &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n            &#125;),\\n            new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n            new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n        ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Events</h3>\\n            <p>GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\"\\n            (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\"&gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n        \\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n            new google.maps.Polygon(&#123;paths: [\\n                &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n            &#125;),\\n            new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n            new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n        ];\\n    &#125;\\n    \\n    handleMapClick(event) &#123;\\n        //event: MouseEvent of Google Maps api\\n    &#125;\\n    \\n    handleOverlayClick(event) &#123;\\n        //event.originalEvent: MouseEvent of Google Maps api\\n        //event.overlay: Clicked overlay     \\n        //event.map: Map instance   \\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Google Maps API</h3>\\n            <p>In case you need to access the map instance directly, use the getMap() method.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap #gmap [options]=\\\"options\\\"&gt;&lt;/p-gmap&gt;\\n\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"fa-search-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n    &#125;\\n    \\n    zoomIn(map) &#123;\\n        map.setZoom(map.getZoom()+1);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n            <p>Another option is to to get the map object directly after init via (onMapReady) event.\\n               In the example below, google.maps.Map is used for adjusting map bounds to markers.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-gmap #gmap [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" [style]=\\\"mapStyle\\\"\\n    (onMapReady)=\\\"setMap($event)\\\"&gt;&lt;/p-gmap&gt;\\n</code>\\n</pre>\\n            <p>Then from your component you would write</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MyModel &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    map: google.maps.Map;\\n    \\n    setMap(event) &#123;\\n        this.map = event.map;\\n    &#125;\\n    \\n    ngOnInit() &#123;\\n        let bounds = new google.maps.LatLngBounds();\\n        this.overlays = [\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n            new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n        ]\\n        // ... extend bounds\\n        this.overlays.forEach(marker => &#123;\\n            bounds.extend(marker.getPosition());\\n        &#125;);\\n        \\n        setTimeout(()=> &#123; // map will need some time to load\\n            this.map.fitBounds(bounds); // Map object used directly\\n        &#125;, 1000);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>options</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Google Maps API configuration object.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>overlays</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of overlays to display.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onMapClick</td>\\n                            <td>event: Google Maps MouseEvent</td>\\n                            <td>Callback to invoke when map is clicked except markers.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onMapDragEnd</td>\\n                            <td>originalEvent: Google Maps dragend<br></td>\\n                            <td>Callback to invoke when map drag (i.e. pan) has ended.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onMapReady</td>\\n                            <td>event.map: Google Maps Instance</td>\\n                            <td>Callback to invoke when the map is ready to be used.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayClick</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDrag</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay is being dragged.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDragEnd</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay drag ends.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOverlayDragStart</td>\\n                            <td>originalEvent: Google Maps MouseEvent <br>\\n                                overlay: Clicked overlay <br>\\n                                map: Map instance <br></td>\\n                            <td>Callback to invoke when an overlay drag starts.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onZoomChanged</td>\\n                            <td>originalEvent: Google Maps zoom_changed</td>\\n                            <td>Callback to invoke when zoom level has changed.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>Google Maps API.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\n\\n&lt;p-gmap #gmap [style]=\\\"&#123;'width':'100%','height':'320px'&#125;\\\" [options]=\\\"options\\\" [overlays]=\\\"overlays\\\" \\n    (onMapClick)=\\\"handleMapClick($event)\\\" (onOverlayClick)=\\\"handleOverlayClick($event)\\\" (onOverlayDragEnd)=\\\"handleDragEnd($event)\\\"&gt;&lt;/p-gmap&gt;\\n&lt;button type=\\\"button\\\" pButton label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"clear()\\\" style=\\\"margin-top:10px\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom In\\\" icon=\\\"fa-search-plus\\\" (click)=\\\"zoomIn(gmap.getMap())\\\" style=\\\"margin-top:10px\\\"&gt;&lt;/button&gt;\\n&lt;button type=\\\"button\\\" pButton label=\\\"Zoom Out\\\" icon=\\\"fa-search-minus\\\" (click)=\\\"zoomOut(gmap.getMap())\\\" style=\\\"margin-top:10px\\\"&gt;&lt;/button&gt;\\n\\n&lt;p-dialog showEffect=\\\"fade\\\" [(visible)]=\\\"dialogVisible\\\" header=\\\"New Location\\\"&gt;\\n    &lt;div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedPosition\\\"&gt;\\n        &lt;div class=\\\"ui-g-2\\\"&gt;&lt;label for=\\\"title\\\"&gt;Label&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"ui-g-10\\\"&gt;&lt;input type=\\\"text\\\" pInputText id=\\\"title\\\" [(ngModel)]=\\\"markerTitle\\\"&gt;&lt;/div&gt;\\n        \\n        &lt;div class=\\\"ui-g-2\\\"&gt;&lt;label for=\\\"lat\\\"&gt;Lat&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"ui-g-10\\\"&gt;&lt;input id=\\\"lat\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lat()\\\"&gt;&lt;/div&gt;\\n        \\n        &lt;div class=\\\"ui-g-2\\\"&gt;&lt;label for=\\\"lng\\\"&gt;Lng&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"ui-g-10\\\"&gt;&lt;input id=\\\"lng\\\" type=\\\"text\\\" readonly pInputText [ngModel]=\\\"selectedPosition.lng()\\\"&gt;&lt;/div&gt;\\n        \\n        &lt;div class=\\\"ui-g-2\\\"&gt;&lt;label for=\\\"drg\\\"&gt;Drag&lt;/label&gt;&lt;/div&gt;\\n        &lt;div class=\\\"ui-g-10\\\"&gt;&lt;p-checkbox [(ngModel)]=\\\"draggable\\\" binary=\\\"true\\\" [style]=\\\"&#123;'margin-top':'.25em'&#125;\\\"&gt;&lt;/p-checkbox&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;p-footer&gt;\\n        &lt;div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\"&gt;\\n            &lt;button type=\\\"button\\\" pButton label=\\\"Add Marker\\\" icon=\\\"fa-plus\\\" (click)=\\\"addMarker()\\\"&gt;&lt;/button&gt;\\n        &lt;/div&gt;\\n    &lt;/p-footer&gt;\\n&lt;/p-dialog&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class GMapDemo implements OnInit &#123;\\n\\n    options: any;\\n    \\n    overlays: any[];\\n    \\n    dialogVisible: boolean;\\n    \\n    markerTitle: string;\\n    \\n    selectedPosition: any;\\n    \\n    infoWindow: any;\\n    \\n    draggable: boolean;\\n    \\n    msgs: Message[] = [];\\n\\n    ngOnInit() &#123;\\n        this.options = &#123;\\n            center: &#123;lat: 36.890257, lng: 30.707417&#125;,\\n            zoom: 12\\n        &#125;;\\n        \\n        this.initOverlays();\\n        \\n        this.infoWindow = new google.maps.InfoWindow();\\n    &#125;\\n    \\n    handleMapClick(event) &#123;\\n        this.dialogVisible = true;\\n        this.selectedPosition = event.latLng;\\n    &#125;\\n    \\n    handleOverlayClick(event) &#123;\\n        this.msgs = [];\\n        let isMarker = event.overlay.getTitle != undefined;\\n        \\n        if(isMarker) &#123;\\n            let title = event.overlay.getTitle();\\n            this.infoWindow.setContent('<div>' + title + '</div>');\\n            this.infoWindow.open(event.map, event.overlay);\\n            event.map.setCenter(event.overlay.getPosition());\\n            \\n            this.msgs.push(&#123;severity:'info', summary:'Marker Selected', detail: title&#125;);\\n        &#125;\\n        else &#123;\\n            this.msgs.push(&#123;severity:'info', summary:'Shape Selected', detail: ''&#125;);\\n        &#125;        \\n    &#125;\\n    \\n    addMarker() &#123;\\n        this.overlays.push(new google.maps.Marker(&#123;position:&#123;lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()&#125;, title:this.markerTitle, draggable: this.draggable&#125;));\\n        this.markerTitle = null;\\n        this.dialogVisible = false;\\n    &#125;\\n    \\n    handleDragEnd(event) &#123;\\n        this.msgs = [];\\n        this.msgs.push(&#123;severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()&#125;);\\n    &#125;\\n    \\n    initOverlays() &#123;\\n        if(!this.overlays||!this.overlays.length) &#123;\\n            this.overlays = [\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.879466, lng: 30.667648&#125;, title:\\\"Konyaalti\\\"&#125;),\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.883707, lng: 30.689216&#125;, title:\\\"Ataturk Park\\\"&#125;),\\n                new google.maps.Marker(&#123;position: &#123;lat: 36.885233, lng: 30.702323&#125;, title:\\\"Oldtown\\\"&#125;),\\n                new google.maps.Polygon(&#123;paths: [\\n                    &#123;lat: 36.9177, lng: 30.7854&#125;,&#123;lat: 36.8851, lng: 30.7802&#125;,&#123;lat: 36.8829, lng: 30.8111&#125;,&#123;lat: 36.9177, lng: 30.8159&#125;\\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\\n                &#125;),\\n                new google.maps.Circle(&#123;center: &#123;lat: 36.90707, lng: 30.56533&#125;, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500&#125;),\\n                new google.maps.Polyline(&#123;path: [&#123;lat: 36.86149, lng: 30.63743&#125;,&#123;lat: 36.86341, lng: 30.72463&#125;], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2&#125;)\\n            ];\\n        &#125;\\n    &#125;\\n    \\n    zoomIn(map) &#123;\\n        map.setZoom(map.getZoom()+1);\\n    &#125;\\n    \\n    zoomOut(map) &#123;\\n        map.setZoom(map.getZoom()-1);\\n    &#125;\\n    \\n    clear() &#123;\\n        this.overlays = [];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.html\n// module id = ../../../../../src/app/showcase/components/gmap/gmapdemo.html\n// module chunks = gmapdemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {GMapDemo} from './gmapdemo';\nimport {GMapDemoRoutingModule} from './gmapdemo-routing.module';\nimport {GMapModule} from 'primeng/primeng';\nimport {GrowlModule} from 'primeng/primeng';\nimport {CheckboxModule} from 'primeng/primeng';\nimport {DialogModule} from 'primeng/primeng';\nimport {InputTextModule} from 'primeng/primeng';\nimport {ButtonModule} from 'primeng/primeng';\nimport {TabViewModule} from 'primeng/primeng';\nimport {CodeHighlighterModule} from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tGMapDemoRoutingModule,\n        GMapModule,\n        GrowlModule,\n        InputTextModule,\n        CheckboxModule,\n        DialogModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tGMapDemo\n\t]\n})\nexport class GMapDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.module.ts","import {Component,OnInit} from '@angular/core';\nimport {Message} from 'primeng/primeng';\n\ndeclare var google: any;\n\n@Component({\n    templateUrl: './gmapdemo.html',\n    styles: [`\n        .ui-g-2 {\n            padding-top: .75em;\n        }\n    `]\n})\nexport class GMapDemo implements OnInit {\n    \n    options: any;\n    \n    overlays: any[];\n    \n    dialogVisible: boolean;\n    \n    markerTitle: string;\n    \n    selectedPosition: any;\n    \n    infoWindow: any;\n    \n    draggable: boolean;\n    \n    msgs: Message[] = [];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n        \n        this.initOverlays();\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n    \n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n    \n    handleOverlayClick(event) {\n        this.msgs = [];\n        let isMarker = event.overlay.getTitle != undefined;\n        \n        if(isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('<div>' + title + '</div>');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n            \n            this.msgs.push({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.msgs.push({severity:'info', summary:'Shape Selected', detail: ''});\n        }        \n    }\n    \n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n    \n    handleDragEnd(event) {\n        this.msgs = [];\n        this.msgs.push({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n    \n    initOverlays() {\n        if(!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n    \n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n    \n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n    \n    clear() {\n        this.overlays = [];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/gmap/gmapdemo.ts"],"sourceRoot":"webpack:///"}