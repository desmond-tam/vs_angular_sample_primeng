{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"names":[],"mappings":"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","file":"fileuploaddemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {FileUploadDemo} from './fileuploaddemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: FileUploadDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class FileUploadDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">FileUpload</span>\\n        <span>FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and\\n            validations.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\n        \\n    <h3 class=\\\"first\\\">Advanced</h3>\\n    <p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\n            multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"> \\n            <ng-template pTemplate=\\\"content\\\">\\n                <ul *ngIf=\\\"uploadedFiles.length\\\">\\n                    <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\n                </ul>\\n            </ng-template>    \\n    </p-fileUpload>\\n    \\n    <h3>Basic</h3>\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\n    \\n    <h3>Basic with Auto</h3>\\n    <p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"></p-fileUpload>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;FileUploadModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>FileUpload requires a url property as the upload target and a name to identify the files at backend.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>Multiple Uploads</h3>\\n            <p>Only one file can be selected at a time, to allow selecting multiples enable multiple option.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>DragDrop</h3>\\n            <p>File selection can also be done by dragging and dropping one or more to the content section of the component.</p>\\n            \\n            <h3>Auto Uploads</h3>\\n            <p>When auto property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" auto=\\\"auto\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>File Types</h3>\\n            <p>Selectable file types can be restricted with accept property, example below only allows images to be uploaded.\\n            Read more about other possible values <a href=\\\"http://www.w3schools.com/tags/att_input_accept.asp\\\">here</a>.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>File Size</h3>\\n            <p>Maximium file size can be restricted using maxFileSize property defined in bytes.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <p>In order to customize the default messages use invalidFileSizeMessageSummary and invalidFileSizeMessageDetail options. \\n            In summary &#123;0&#125; placeholder refers to the filename and in detail, file size.</p>\\n            <ul>\\n                <li>invalidFileSizeMessageSummary: '&#123;0&#125;: Invalid file size, '</li>\\n                <li>invalidFileSizeMessageDetail: string = 'maximum upload size is &#123;0&#125;.'</li>\\n            </ul>\\n            \\n            <h3>Templating</h3>\\n            <p>File list UI is customizable using a ng-template called \\\"file\\\" that gets the <a href=\\\"https://www.w3.org/TR/FileAPI/\\\">File</a> instance as the implicit variable.\\n                Second ng-template named \\\"content\\\" can be used to place custom content inside the content section which would be useful to implement a user interface to manage the uploaded files such as removing them.  \\n                Third and final ng-template option is \\\"toolbar\\\" to display custom content at toolbar.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\n        &lt;ng-template pTemplate=\\\"toolbar\\\"&gt;\\n            &lt;div&gt;Upload 3 Files&lt;/div&gt;\\n        &lt;/ng-template&gt;  \\n        &lt;ng-template let-file pTemplate=\\\"file\\\"&gt;\\n            &lt;div&gt;Custom UI to display a file&lt;/div&gt;\\n        &lt;/ng-template&gt; \\n        &lt;ng-template pTemplate=\\\"content\\\"&gt;\\n            &lt;div&gt;Custom UI to manage uploaded files&lt;/div&gt;\\n        &lt;/ng-template&gt;  \\n&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n            <h3>Request Customization</h3>\\n            <p>XHR request to upload the files can be customized using the onBeforeUpload callback that passes\\n                the xhr instance and FormData object as event parameters.</p>\\n                \\n            <h3>Basic UI</h3>\\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\" auto=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n            <h3>Custom Upload</h3>\\n            <p>Uploading implementation can be overriden by enabling customMode property and defining a custom upload handler event.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-fileUpload name=\\\"myfile[]\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"myUploader($event)\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nmyUploader(event) &#123;\\n    //event.files == files to upload\\n&#125;\\n</code>\\n</pre>\\n            \\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>name</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the request parameter to identify the files at backend.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>url</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Remote url to upload the files.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>method</td>\\n                            <td>string</td>\\n                            <td>POST</td>\\n                            <td>HTTP method to send the files to the url.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>multiple</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Used to select multiple files at once from file dialog.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>accept</td>\\n                            <td>string</td>\\n                            <td>false</td>\\n                            <td>Pattern to restrict the allowed file types such as \\\"image/*\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Disables the upload functionality.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>auto</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>maxFileSize</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Maximum file size allowed in bytes.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileSizeMessageSummary</td>\\n                            <td>string</td>\\n                            <td>\\\"&#123;0&#125;: Invalid file size, \\\"</td>\\n                            <td>Summary message of the invalid fize size.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileSizeMessageDetail</td>\\n                            <td>string</td>\\n                            <td>\\\"maximum upload size is &#123;0&#125;.\\\"</td>\\n                            <td>Detail message of the invalid fize size.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileTypeMessageSummary</td>\\n                            <td>string</td>\\n                            <td>\\\"&#123;0&#125;: Invalid file type, \\\"</td>\\n                            <td>Summary message of the invalid fize type.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>invalidFileTypeMessageDetail</td>\\n                            <td>string</td>\\n                            <td>\\\"allowed file types: &#123;0&#125;.\\\"</td>\\n                            <td>Detail message of the invalid fize type.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>previewWidth</td>\\n                            <td>number</td>\\n                            <td>50</td>\\n                            <td>Width of the image thumbnail in pixels.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>chooseLabel</td>\\n                            <td>string</td>\\n                            <td>Choose</td>\\n                            <td>Label of the choose button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>uploadLabel</td>\\n                            <td>string</td>\\n                            <td>Upload</td>\\n                            <td>Label of the upload button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>cancelLabel</td>\\n                            <td>string</td>\\n                            <td>Cancel</td>\\n                            <td>Label of the cancel button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>withCredentials</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>mode</td>\\n                            <td>string</td>\\n                            <td>advanced</td>\\n                            <td>Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>customUpload</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\\n                        </tr>\\n                      <tr>\\n                            <td>showUploadButton</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Defines the visibility of upload button for Client-side FileUpload.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showCancelButton</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Defines the visibility of cancel button for Client-side FileUpload.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>files</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>List of files to be provide to the FileUpload externally.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onBeforeUpload</td>\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\n                                event.formData: FormData object.</td>\\n                            <td>Callback to invoke before file upload begins to customize the request\\n                                such as post parameters before the files.</td>\\n                        </tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n                            <td>onBeforeSend</td>\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\n                                event.formData: FormData object.</td>\\n                            <td>Callback to invoke before file send begins to customize the request\\n                                such as adding headers.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onUpload</td>\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\n                                event.files: Uploaded files.</td>\\n                            <td>Callback to invoke when file upload is complete.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onError</td>\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\n                                event.files: Files that are not uploaded.</td>\\n                            <td>Callback to invoke if file upload fails.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onClear</td>\\n                            <td>-.</td>\\n                            <td>Callback to invoke when files in queue are removed without uploading using clear all button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onRemove</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.file: Selected file.</td>\\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onSelect</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.files: List of selected files.</td>\\n                            <td>Callback to invoke when files are selected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onProgress</td>\\n                            <td>event.originalEvent: Original browser event. <br />\\n                                event.progress: Calculated progress value.</td>\\n                            <td>Callback to invoke when files are selected.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>uploadHandler</td>\\n                            <td>event.files: List of selected files.</td>\\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>upload</td>\\n                            <td>-</td>\\n                            <td>Uploads the selected files.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>clear</td>\\n                            <td>-</td>\\n                            <td>Clears the files list.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-fileupload</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-fileupload-buttonbar</td>\\n                            <td>Header containing the buttons</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-fileupload-content</td>\\n                            <td>Content section</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fileupload\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\n    \\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\n&lt;p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\n        multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\n    &lt;ng-template pTemplate type=\\\"content\\\"&gt;\\n        &lt;ul *ngIf=\\\"uploadedFiles.length\\\"&gt;\\n            &lt;li *ngFor=\\\"let file of uploadedFiles\\\"&gt;&#123;&#123;file.name&#125;&#125; - &#123;&#123;file.size&#125;&#125; bytes&lt;/li&gt;\\n        &lt;/ul&gt;\\n    &lt;/ng-template&gt;        \\n&lt;/p-fileUpload&gt;\\n\\n&lt;h3&gt;Basic&lt;/h3&gt;\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"&gt;&lt;/p-fileUpload&gt;\\n\\n&lt;h3&gt;Basic with Auto&lt;/h3&gt;\\n&lt;p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"&gt;&lt;/p-fileUpload&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class FileUploadDemo &#123;\\n\\n    msgs: Message[];\\n    \\n    uploadedFiles: any[] = [];\\n\\n    onUpload(event) &#123;\\n        for(let file of event.files) &#123;\\n            this.uploadedFiles.push(file);\\n        &#125;\\n    \\n        this.msgs = [];\\n        this.msgs.push(&#123;severity: 'info', summary: 'File Uploaded', detail: ''&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.html\n// module id = ../../../../../src/app/showcase/components/fileupload/fileuploaddemo.html\n// module chunks = fileuploaddemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FileUploadDemo} from './fileuploaddemo';\nimport {FileUploadDemoRoutingModule} from './fileuploaddemo-routing.module';\nimport {FileUploadModule} from 'primeng/primeng';\nimport {GrowlModule} from 'primeng/primeng';\nimport {ButtonModule} from 'primeng/primeng';\nimport {TabViewModule} from 'primeng/primeng';\nimport {CodeHighlighterModule} from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFileUploadDemoRoutingModule,\n        FileUploadModule,\n        GrowlModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tFileUploadDemo\n\t]\n})\nexport class FileUploadDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","import {Component} from '@angular/core';\nimport { Message } from 'primeng/primeng';\n\n@Component({\n    templateUrl: './fileuploaddemo.html'\n})\nexport class FileUploadDemo {\n\n    msgs: Message[];\n    \n    uploadedFiles: any[] = [];\n\n    onUpload(event) {\n        for(let file of event.files) {\n            this.uploadedFiles.push(file);\n        }\n        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\n    }\n    \n    onBasicUpload(event) {        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\n    }\n    \n    onBasicUploadAuto(event) {        \n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"sourceRoot":"webpack:///"}