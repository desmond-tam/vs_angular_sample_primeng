{"version":3,"sources":["D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo-routing.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.html","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.module.ts","D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACQ;AAYpD,IAAa,6BAA6B,GAA1C;CAA6C;AAAhC,6BAA6B;IAVzC,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,2EAAgB,EAAC;aACrC,CAAC;SACF;QACD,OAAO,EAAE;YACR,6DAAY;SACZ;KACD,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;ACd1C,oUAAoU,UAAU,gEAAgE,gBAAgB,gDAAgD,UAAU,6JAA6J,gBAAgB,0QAA0Q,wBAAwB,wBAAwB,6PAA6P,0CAA0C,IAAI,mBAAmB,wHAAwH,yBAAyB,UAAU,gPAAgP,+BAA+B,UAAU,4MAA4M,6CAA6C,IAAI,mBAAmB,yOAAyO,6IAA6I,IAAI,mBAAmB,syHAAsyH,0EAA0E,uHAAuH,kCAAkC,oCAAoC,YAAY,QAAQ,ojDAAojD,sBAAsB,WAAW,UAAU,KAAK,OAAO,MAAM,wDAAwD,qBAAqB,MAAM,IAAI,mBAAmB,QAAQ,MAAM,gBAAgB,UAAU,KAAK,OAAO,MAAM,qJAAqJ,qBAAqB,MAAM,IAAI,mBAAmB,0HAA0H,sCAAsC,iCAAiC,QAAQ,mE;;;;;;;;;;;;;;;;;;;;;;;ACAzgR;AACE;AACD;AACQ;AAC8B;AACS;AAe3F,IAAa,sBAAsB,GAAnC;CAAsC;AAAzB,sBAAsB;IAblC,+DAAQ,CAAC;QACT,OAAO,EAAE;YACR,6DAAY;YACN,2DAAW;YACjB,uGAA6B;YACvB,mEAAkB;YAClB,8DAAa;YACb,sEAAqB;SAC3B;QACD,YAAY,EAAE;YACb,2EAAgB;SAChB;KACD,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;ACpBK;AAKxC,IAAa,gBAAgB,GAA7B;IAHA;QAKI,aAAQ,GAAY,KAAK,CAAC;QAE1B,aAAQ,GAAY,IAAI,CAAC;IAC7B;CAAA;AALa,gBAAgB;IAH5B,gEAAS,CAAC;QACP,8GAAsC;KACzC,CAAC;GACW,gBAAgB,CAK7B;AAL6B","file":"togglebuttondemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {ToggleButtonDemo} from './togglebuttondemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: ToggleButtonDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class ToggleButtonDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Togglebutton</span>\\n        <span>ToggleButton is used to select a boolean value using a button.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic - ({{checked1}})</h3>\\n    <p-toggleButton [(ngModel)]=\\\"checked1\\\" [style]=\\\"{'width':'150px'}\\\"></p-toggleButton>\\n\\n    <h3>Customized - ({{checked2}})</h3>\\n    <p-toggleButton [(ngModel)]=\\\"checked2\\\" onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\" [style]=\\\"{'width':'150px'}\\\"></p-toggleButton>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;ToggleButtonModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Two-way binding to a boolean property is defined using the standard ngModel directive.</p>\\n                    \\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toggleButton [(ngModel)]=\\\"checked\\\"&gt;&lt;/p-toggleButton&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n    checked: boolean;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <p>As model is two-way binding enabled, setting the bound value as true displays the state as checked.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n\\n   checked: boolean = true;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Model Driven Forms</h3>\\n            <p>ToggleButton can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toggleButton formControlName=\\\"agreed\\\"&gt;&lt;/p-toggleButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>Customization</h3>\\n            <p>Icons and Labels can be customized using onLabel, offLabel, onIcon and OffIcon attributes.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toggleButton onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" \\n        onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\" [(ngModel)]=\\\"val\\\"&gt;&lt;/p-toggleButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                         <tr>\\n                            <td>onLabel</td>\\n                            <td>string</td>\\n                            <td>Yes</td>\\n                            <td>Label for the on state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>offLabel</td>\\n                            <td>string</td>\\n                            <td>No</td>\\n                            <td>Label for the off state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon for the on state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>offIcon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Icon for the off state.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                          <td>tabindex</td>\\n                          <td>number</td>\\n                          <td>null</td>\\n                          <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>inputId</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onChange</td>\\n                            <td>event.originalEvent: browser event <br>\\n                                evebt.checked: boolean value to represent checked state.</td>\\n                            <td>Callback to invoke on state change.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toggleButton (onChange)=\\\"handleChange($event)\\\" [(ngModel)]=\\\"val\\\"&gt;\\n</code>\\n</pre>\\n <pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ModelComponent &#123;\\n    \\n    handleChange(e) &#123;\\n        var isChecked = e.checked;\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-togglebutton</td>\\n                            <td>Container element</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-button-icon-left</td>\\n                            <td>Icon element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-button-text</td>\\n                            <td>Label element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/togglebutton\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic - ({{checked1}})&lt;/h3&gt;\\n&lt;p-toggleButton [(ngModel)]=\\\"checked1\\\" [style]=\\\"&#123;'width':'150px'&#125;\\\"&gt;&lt;/p-toggleButton&gt;\\n\\n&lt;h3&gt;Customized - ({{checked2}})&lt;/h3&gt;\\n&lt;p-toggleButton [(ngModel)]=\\\"checked2\\\" onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"fa-check-square\\\" offIcon=\\\"fa-square\\\" [style]=\\\"&#123;'width':'150px'&#125;\\\"&gt;&lt;/p-toggleButton&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class ToggleButtonDemo &#123;\\n    \\n    checked1: boolean = false;\\n\\n    checked2: boolean = true;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.html\n// module id = ../../../../../src/app/showcase/components/togglebutton/togglebuttondemo.html\n// module chunks = togglebuttondemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}  from '@angular/forms';\nimport {ToggleButtonDemo} from './togglebuttondemo';\nimport { ToggleButtonDemoRoutingModule } from './togglebuttondemo-routing.module';\nimport { ToggleButtonModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n        FormsModule,\n\t\tToggleButtonDemoRoutingModule,\n        ToggleButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tToggleButtonDemo\n\t]\n})\nexport class ToggleButtonDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './togglebuttondemo.html'\n})\nexport class ToggleButtonDemo {\n    \n    checked1: boolean = false;\n\n    checked2: boolean = true;\n}\n\n\n// WEBPACK FOOTER //\n// D:/Desmond/Development/2017/VisualStudio/AngularVSUsingPrimeNG/AngularVSUsingPrimeNG/src/app/showcase/components/togglebutton/togglebuttondemo.ts"],"sourceRoot":"webpack:///"}